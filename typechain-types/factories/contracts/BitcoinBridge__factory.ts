/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  BitcoinBridge,
  BitcoinBridgeInterface,
} from "../../contracts/BitcoinBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wbtcToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Initiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "preimage",
        type: "bytes32",
      },
    ],
    name: "Redeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "Refunded",
    type: "event",
  },
  {
    inputs: [],
    name: "emergencyPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "htlcs",
    outputs: [
      {
        internalType: "address payable",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "timelock",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "refunded",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_resolver",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_timelock",
        type: "uint256",
      },
    ],
    name: "initiate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_preimage",
        type: "bytes",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wbtcToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346100ce57601f610caf38819003918201601f19168301916001600160401b038311848410176100d3578084926020946040528339810103126100ce57516001600160a01b0390818116908190036100ce57600160005533156100b55760018054336001600160a01b03198216811790925560405193167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3608052610bc590816100ea823960805181610a0e0152f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816327614df8146109fa57508063412c0b58146106de57806351858e27146106c2578063715018a6146106655780637249fbb6146104ea5780638da5cb5b146104c157806391edd8f21461044657806395ccea671461039d578063f2fde38b1461030e5763f7ff72071461009157600080fd5b3461030a578160031936011261030a57803590602480359167ffffffffffffffff808411610306573660238501121561030657838201359081116103065736838286010111610306576100e2610abc565b848752602093600285528688209160018060a01b03600184015416933385036102b257600584019283549261011a60ff851615610adf565b61012a60ff8560081c1615610b37565b82860154421015610264578761015c8a80948f948f819051958693018484013781018583820152038084520182610a84565b8b5190805190835b82811061024857505081908101838152039060025afa1561023e5789519560038501968754036101fc57505060ff19166001179055600201548691829182918291908282156101f3575bf1156101e657927f489e9ee921192823d1aa1ef800c9ffc642993538b1e7e43a4d46a91965e894ab9293549051908152a26001815580f35b50505051903d90823e3d90fd5b506108fc6101ae565b895162461bcd60e51b8152918201889052601f908201527f426974636f696e4272696467653a20696e76616c696420707265696d616765006044820152606490fd5b88513d8b823e3d90fd5b9092948092945081840101518186015201918a93918e93610164565b8a5162461bcd60e51b81528084018a90526023818a01527f426974636f696e4272696467653a2074696d656c6f636b2068617320657870696044820152621c995960ea1b6064820152608490fd5b885162461bcd60e51b81529081018790526029818701527f426974636f696e4272696467653a2063616c6c6572206973206e6f7420746865604482015268103932b9b7b63b32b960b91b6064820152608490fd5b8680fd5b8280fd5b503461030a57602036600319011261030a57610328610a3d565b90610331610a58565b6001600160a01b03918216928315610387575050600154826bffffffffffffffffffffffff60a01b821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b50903461030a578060031936011261030a5760206103b9610a3d565b926103c2610a58565b604460018060a01b0391868360015416938651978895869463a9059cbb60e01b86528501526024356024850152165af190811561043d5750610402575080f35b6020813d8211610435575b8161041a60209383610a84565b8101031261043157518015150361042e5780f35b80fd5b5080fd5b3d915061040d565b513d84823e3d90fd5b50903461030a57602036600319011261030a578060ff9160e0948435815260026020522060018060a01b03938482541694600183015416926002830154906005600385015493850154940154948151978852602088015286015260608501526080840152818116151560a084015260081c16151560c0820152f35b50503461043157816003193601126104315760015490516001600160a01b039091168152602090f35b50903461030a57602036600319011261030a57813591610508610abc565b828452600260205281842080546001600160a01b03169133830361060f57600582019081549061053b60ff831615610adf565b61054b60ff8360081c1615610b37565b8084015442106105bc575061ff001916610100179055600201548491829182918291908282156105b3575bf1156105a857507ffe509803c09416b28ff3d8f690c8b0c61462a892c46d5430c8fb20abe472daf08280a26001815580f35b51913d9150823e3d90fd5b506108fc610576565b608490602087519162461bcd60e51b8352820152602760248201527f426974636f696e4272696467653a2074696d656c6f636b20686173206e6f7420604482015266195e1c1a5c995960ca1b6064820152fd5b608490602085519162461bcd60e51b8352820152602a60248201527f426974636f696e4272696467653a2063616c6c6572206973206e6f74207468656044820152691034b734ba34b0ba37b960b11b6064820152fd5b833461042e578060031936011261042e5761067e610a58565b600180546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b833461042e578060031936011261042e576106db610a58565b80f35b50608036600319011261030a576001600160a01b03602480358281169492938035939291869003610306576044948535606480359061071b610abc565b878b5260209860028a5284888d2054166109a357341561094f578a156109005783156108c257610e108311156108675750504201918242116108555785519460e086019086821067ffffffffffffffff8311176108445750918a899694928996948952338652878601908c8252808a8089019434865260608a0196875260808a0197885260a08a019b818d5260c08b019b828d5282526002905220975116906bffffffffffffffffffffffff60a01b918289541617885560018801925116908254161790555160028501555160038401555190820155600501915115159082549051151560081b61ff00169160ff169061ffff1916171790555134815233927fe6cf32272b10a93a5a022b8a3184f4c213f232ce976cb7cc95190fa8d3c9d54691a46001815580f35b634e487b7160e01b8c52604186528bfd5b634e487b7160e01b8a5260118452848afd5b7233b932b0ba32b9103a3430b71018903437bab960691b6084927f426974636f696e4272696467653a2074696d656c6f636b206d75737420626520889360338b8f8e519762461bcd60e51b8952880152860152840152820152fd5b7f426974636f696e4272696467653a20696e76616c6964206861736800000000008691601b898d8c519562461bcd60e51b8752860152840152820152fd5b666164647265737360c81b6084927f426974636f696e4272696467653a20696e76616c6964207265736f6c76657220889360278b8f8e519762461bcd60e51b8952880152860152840152820152fd5b6b06561746572207468616e20360a41b6084927f426974636f696e4272696467653a20616d6f756e74206d7573742062652067728893602c8b8f8e519762461bcd60e51b8952880152860152840152820152fd5b6e20616c72656164792065786973747360881b6084927f426974636f696e4272696467653a2073776170207769746820746869732069648893602f8b8f8e519762461bcd60e51b8952880152860152840152820152fd5b8490346104315781600319360112610431577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b600435906001600160a01b0382168203610a5357565b600080fd5b6001546001600160a01b03163303610a6c57565b60405163118cdaa760e01b8152336004820152602490fd5b90601f8019910116810190811067ffffffffffffffff821117610aa657604052565b634e487b7160e01b600052604160045260246000fd5b600260005414610acd576002600055565b604051633ee5aeb560e01b8152600490fd5b15610ae657565b60405162461bcd60e51b8152602060048201526024808201527f426974636f696e4272696467653a207377617020616c726561647920657865636044820152631d5d195960e21b6064820152608490fd5b15610b3e57565b60405162461bcd60e51b8152602060048201526024808201527f426974636f696e4272696467653a207377617020616c726561647920726566756044820152631b99195960e21b6064820152608490fdfea26469706673582212202f5b7695880a62fe4bd430a75bb503f8f86513261892e78172858340c3cfae7b64736f6c63430008140033";

type BitcoinBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BitcoinBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BitcoinBridge__factory extends ContractFactory {
  constructor(...args: BitcoinBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _wbtcToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_wbtcToken, overrides || {});
  }
  override deploy(
    _wbtcToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_wbtcToken, overrides || {}) as Promise<
      BitcoinBridge & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BitcoinBridge__factory {
    return super.connect(runner) as BitcoinBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BitcoinBridgeInterface {
    return new Interface(_abi) as BitcoinBridgeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BitcoinBridge {
    return new Contract(address, _abi, runner) as unknown as BitcoinBridge;
  }
}
